//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Outliner.AnalyticsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutlinerInstallation", Namespace="http://outliner.pjanssen.nl/")]
    [System.SerializableAttribute()]
    public partial class OutlinerInstallation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Outliner.AnalyticsService.OutlinerVersion OutlinerVersionField;
        
        private int MaxVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Outliner.AnalyticsService.OutlinerVersion OutlinerVersion {
            get {
                return this.OutlinerVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.OutlinerVersionField, value) != true)) {
                    this.OutlinerVersionField = value;
                    this.RaisePropertyChanged("OutlinerVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int MaxVersion {
            get {
                return this.MaxVersionField;
            }
            set {
                if ((this.MaxVersionField.Equals(value) != true)) {
                    this.MaxVersionField = value;
                    this.RaisePropertyChanged("MaxVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutlinerVersion", Namespace="http://outliner.pjanssen.nl/")]
    [System.SerializableAttribute()]
    public partial class OutlinerVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int MajorField;
        
        private int MinorField;
        
        private int BuildField;
        
        private int RevisionField;
        
        private bool IsBetaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Major {
            get {
                return this.MajorField;
            }
            set {
                if ((this.MajorField.Equals(value) != true)) {
                    this.MajorField = value;
                    this.RaisePropertyChanged("Major");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Minor {
            get {
                return this.MinorField;
            }
            set {
                if ((this.MinorField.Equals(value) != true)) {
                    this.MinorField = value;
                    this.RaisePropertyChanged("Minor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int Build {
            get {
                return this.BuildField;
            }
            set {
                if ((this.BuildField.Equals(value) != true)) {
                    this.BuildField = value;
                    this.RaisePropertyChanged("Build");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int Revision {
            get {
                return this.RevisionField;
            }
            set {
                if ((this.RevisionField.Equals(value) != true)) {
                    this.RevisionField = value;
                    this.RaisePropertyChanged("Revision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public bool IsBeta {
            get {
                return this.IsBetaField;
            }
            set {
                if ((this.IsBetaField.Equals(value) != true)) {
                    this.IsBetaField = value;
                    this.RaisePropertyChanged("IsBeta");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://outliner.pjanssen.nl/", ConfigurationName="AnalyticsService.AnalyticsSoap")]
    public interface AnalyticsSoap {
        
        // CODEGEN: Generating message contract since element name installation from namespace http://outliner.pjanssen.nl/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://outliner.pjanssen.nl/TreeModeStarted", ReplyAction="*")]
        Outliner.AnalyticsService.TreeModeStartedResponse TreeModeStarted(Outliner.AnalyticsService.TreeModeStartedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://outliner.pjanssen.nl/TreeModeStarted", ReplyAction="*")]
        System.IAsyncResult BeginTreeModeStarted(Outliner.AnalyticsService.TreeModeStartedRequest request, System.AsyncCallback callback, object asyncState);
        
        Outliner.AnalyticsService.TreeModeStartedResponse EndTreeModeStarted(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TreeModeStartedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TreeModeStarted", Namespace="http://outliner.pjanssen.nl/", Order=0)]
        public Outliner.AnalyticsService.TreeModeStartedRequestBody Body;
        
        public TreeModeStartedRequest() {
        }
        
        public TreeModeStartedRequest(Outliner.AnalyticsService.TreeModeStartedRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://outliner.pjanssen.nl/")]
    public partial class TreeModeStartedRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Outliner.AnalyticsService.OutlinerInstallation installation;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string treeModeName;
        
        public TreeModeStartedRequestBody() {
        }
        
        public TreeModeStartedRequestBody(Outliner.AnalyticsService.OutlinerInstallation installation, string treeModeName) {
            this.installation = installation;
            this.treeModeName = treeModeName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TreeModeStartedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TreeModeStartedResponse", Namespace="http://outliner.pjanssen.nl/", Order=0)]
        public Outliner.AnalyticsService.TreeModeStartedResponseBody Body;
        
        public TreeModeStartedResponse() {
        }
        
        public TreeModeStartedResponse(Outliner.AnalyticsService.TreeModeStartedResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class TreeModeStartedResponseBody {
        
        public TreeModeStartedResponseBody() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AnalyticsSoapChannel : Outliner.AnalyticsService.AnalyticsSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AnalyticsSoapClient : System.ServiceModel.ClientBase<Outliner.AnalyticsService.AnalyticsSoap>, Outliner.AnalyticsService.AnalyticsSoap {
        
        private BeginOperationDelegate onBeginTreeModeStartedDelegate;
        
        private EndOperationDelegate onEndTreeModeStartedDelegate;
        
        private System.Threading.SendOrPostCallback onTreeModeStartedCompletedDelegate;
        
        public AnalyticsSoapClient() {
        }
        
        public AnalyticsSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AnalyticsSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnalyticsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnalyticsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TreeModeStartedCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Outliner.AnalyticsService.TreeModeStartedResponse Outliner.AnalyticsService.AnalyticsSoap.TreeModeStarted(Outliner.AnalyticsService.TreeModeStartedRequest request) {
            return base.Channel.TreeModeStarted(request);
        }
        
        public void TreeModeStarted(Outliner.AnalyticsService.OutlinerInstallation installation, string treeModeName) {
            Outliner.AnalyticsService.TreeModeStartedRequest inValue = new Outliner.AnalyticsService.TreeModeStartedRequest();
            inValue.Body = new Outliner.AnalyticsService.TreeModeStartedRequestBody();
            inValue.Body.installation = installation;
            inValue.Body.treeModeName = treeModeName;
            Outliner.AnalyticsService.TreeModeStartedResponse retVal = ((Outliner.AnalyticsService.AnalyticsSoap)(this)).TreeModeStarted(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Outliner.AnalyticsService.AnalyticsSoap.BeginTreeModeStarted(Outliner.AnalyticsService.TreeModeStartedRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTreeModeStarted(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTreeModeStarted(Outliner.AnalyticsService.OutlinerInstallation installation, string treeModeName, System.AsyncCallback callback, object asyncState) {
            Outliner.AnalyticsService.TreeModeStartedRequest inValue = new Outliner.AnalyticsService.TreeModeStartedRequest();
            inValue.Body = new Outliner.AnalyticsService.TreeModeStartedRequestBody();
            inValue.Body.installation = installation;
            inValue.Body.treeModeName = treeModeName;
            return ((Outliner.AnalyticsService.AnalyticsSoap)(this)).BeginTreeModeStarted(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Outliner.AnalyticsService.TreeModeStartedResponse Outliner.AnalyticsService.AnalyticsSoap.EndTreeModeStarted(System.IAsyncResult result) {
            return base.Channel.EndTreeModeStarted(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndTreeModeStarted(System.IAsyncResult result) {
            Outliner.AnalyticsService.TreeModeStartedResponse retVal = ((Outliner.AnalyticsService.AnalyticsSoap)(this)).EndTreeModeStarted(result);
        }
        
        private System.IAsyncResult OnBeginTreeModeStarted(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Outliner.AnalyticsService.OutlinerInstallation installation = ((Outliner.AnalyticsService.OutlinerInstallation)(inValues[0]));
            string treeModeName = ((string)(inValues[1]));
            return this.BeginTreeModeStarted(installation, treeModeName, callback, asyncState);
        }
        
        private object[] OnEndTreeModeStarted(System.IAsyncResult result) {
            this.EndTreeModeStarted(result);
            return null;
        }
        
        private void OnTreeModeStartedCompleted(object state) {
            if ((this.TreeModeStartedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TreeModeStartedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TreeModeStartedAsync(Outliner.AnalyticsService.OutlinerInstallation installation, string treeModeName) {
            this.TreeModeStartedAsync(installation, treeModeName, null);
        }
        
        public void TreeModeStartedAsync(Outliner.AnalyticsService.OutlinerInstallation installation, string treeModeName, object userState) {
            if ((this.onBeginTreeModeStartedDelegate == null)) {
                this.onBeginTreeModeStartedDelegate = new BeginOperationDelegate(this.OnBeginTreeModeStarted);
            }
            if ((this.onEndTreeModeStartedDelegate == null)) {
                this.onEndTreeModeStartedDelegate = new EndOperationDelegate(this.OnEndTreeModeStarted);
            }
            if ((this.onTreeModeStartedCompletedDelegate == null)) {
                this.onTreeModeStartedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTreeModeStartedCompleted);
            }
            base.InvokeAsync(this.onBeginTreeModeStartedDelegate, new object[] {
                        installation,
                        treeModeName}, this.onEndTreeModeStartedDelegate, this.onTreeModeStartedCompletedDelegate, userState);
        }
    }
}
