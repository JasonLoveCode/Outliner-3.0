<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>